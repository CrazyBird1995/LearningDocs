
CREATE DATABASE SCHOOL;


# 创建表
#		- 教师表(teacher)
#			- 教师编号（tno）
#				- 主键
#			- 名称(tname)
#				- 非空，唯一
CREATE TABLE teacher
(
	tno VARCHAR(10) PRIMARY KEY,
	tname varchar(10) UNIQUE NOT NULL
);
#		- 课程表(course)
#			- 课程编号(cno)
#				- 主键
#			- 课程名称(cname)
#				- 非空
#			- 教师编号(tno)
#				- 外键关联教师表中主键
CREATE TABLE course
(
	cno VARCHAR(10) PRIMARY KEY,
	cname VARCHAR(20) NOT NULL,
	tno VARCHAR(10),
	CONSTRAINT fk_teacher_tno FOREIGN KEY(tno) REFERENCES teacher(tno)
);

#		- 学生表(student)
#			- 学生编号(sno)
#				- 主键
#			- 学生名称(sname)
#				- 非空，唯一
#			- 学生年龄(sage)
#			- 学生性别(ssex)
#				- 默认'男'
CREATE TABLE student
(
	sno VARCHAR(10) PRIMARY KEY,
	sname VARCHAR(10) NOT NULL UNIQUE,
	sage INT,
	ssex char DEFAULT "男"
);
#		- 成绩表(sc)
#			- 成绩编号(scno)
#				- 主键，自增
#			- 学生编号(sno)
#				- 外键关联学生表中主键
#			- 课程编号(cno)
#				- 外键关联课程表中主键
#			- 成绩(score)
CREATE TABLE scores
(
	scno INT PRIMARY KEY auto_increment,
	sno VARCHAR(10),
	cno VARCHAR(10),
	score DECIMAL(4,1),
	CONSTRAINT fk_student_sno FOREIGN KEY(sno) REFERENCES student(sno),
	CONSTRAINT fk_course_cno FOREIGN KEY(cno) REFERENCES course(cno)
);

-- INSERT

-- 		- student:
-- 			- ('s001','张三',23,'男');
-- 			- ('s002','李四',23,'男');
-- 			- ('s003','吴鹏',25,'男');
-- 			- ('s004','琴沁',20,'女');
-- 			- ('s005','王丽',20,'女');
-- 			- ('s006','李波',21,'男');
-- 			- ('s007','刘玉',21,'男');
-- 			- ('s008','萧蓉',21,'女');
-- 			- ('s009','陈萧晓',23,'女');
-- 			- ('s010','陈美',22,'女');
INSERT INTO student VALUES
('s001','张三',23,'男'),
('s002','李四',23,'男'),
('s003','吴鹏',25,'男'),
('s004','琴沁',20,'女'),
('s005','王丽',20,'女'),
('s006','李波',21,'男'),
('s007','刘玉',21,'男'),
('s008','萧蓉',21,'女'),
('s009','陈萧晓',23,'女'),
('s010','陈美',22,'女');

-- 		- teacher:
-- 			- ('t001', '刘阳');
-- 			- ('t002', '谌燕');
-- 			- ('t003', '胡明星');
-- 			- ('t004', '刘阳阳');
INSERT INTO teacher VALUES
('t001', '刘阳'),
('t002', '谌燕'),
('t003', '胡明星'),
('t004', '刘阳阳');


-- - course：
-- 			- ('c001','J2SE','t002');
-- 			- ('c002','Java Web','t002');
-- 			- ('c003','SSH','t001');
-- 			- ('c004','Oracle','t001');
-- 			- ('c005','SQL SERVER 2005','t003');
-- 			- ('c006','C#','t003');
-- 			- ('c007','JavaScript','t002');
-- 			- ('c008','DIV+CSS','t001');
-- 			- ('c009','PHP','t003');
-- 			- ('c010','EJB3.0','t002');

INSERT INTO course VALUES
("c001", "J2SE","t002"),
('c002','Java Web','t002'),
('c003','SSH','t001'),
('c004','Oracle','t001'),
('c005','SQL SERVER 2005','t003'),
('c006','C#','t003'),
('c007','JavaScript','t002'),
('c008','DIV+CSS','t001'),
('c009','PHP','t003'),
('c010','EJB3.0','t002');

-- 		- sc:
-- 			- ('s001','c001',78.9);
-- 			- ('s002','c001',80.9);
-- 			- ('s003','c001',81.9);
-- 			- ('s004','c001',60.9);
-- 			- ('s001','c002',82.9);
-- 			- ('s002','c002',72.9);
-- 			- ('s003','c004',41.9);
-- 			- ('s001','c004',59);
-- 			- ('s004','c004',46);
-- 			- ('s008','c003',56);
-- 			- ('s008','c002',43);
-- 			- ('s008','c001',32);
INSERT INTO scores(sno,cno,score) VALUES
('s001','c001',78.9),
('s002','c001',80.9),
('s003','c001',81.9),
('s004','c001',60.9),
('s001','c002',82.9),
('s002','c002',72.9),
('s003','c004',41.9),
('s001','c004',59),
('s004','c004',46),
('s008','c003',56),
('s008','c002',43),
('s008','c001',32);

-- QUERY
-- 1. 查询姓陈的学生姓名和学号。
SELECT sname,sno FROM student WHERE sname LIKE "陈%";
	-- 2. 查询年龄在[20,25]区间的且性别为女的学生姓名。
SELECT sname FROM student where ssex = "女" AND sage BETWEEN 20 AND 25;
	-- 3. 查找编号t002的老师教的全部科目的科目名和对应编号。
SELECT cno,cname FROM course WHERE tno = "t002";
	-- 4. 查找科目c001的考试结果中前3名学生的学号和分数。
SELECT sno,score FROM scores WHERE cno = "c001" ORDER BY score DESC LIMIT 0,3;
	-- 5. 查找科目c002的考试成绩中最后一名学生的学号和分数。
SELECT sno,score FROM scores WHERE cno = "c002" ORDER BY score LIMIT 0,1;
	-- 6. 查找科目c001的考试成绩在70~80分数段的学生的学号和对应分数。
SELECT sno,score FROM scores WHERE cno = "c001" AND score BETWEEN 70 AND 80;
	-- 7.查询所有科目c004的考试不及格的成绩信息。
SELECT * from scores WHERE cno = "c004" AND score < 60;
	-- 8. 查询学过c001、c002、c007、c010其中一门或多门课的同学的学号；
SELECT DISTINCT sno FROM scores WHERE cno in ("c001","c002","c007","c010");